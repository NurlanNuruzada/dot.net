@model RegisterVm
@{
    ViewData["Title"] = "Register";
    Layout = null;
}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Validation in HTML | CodingNepal</title>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />
</head>
<body>
    <form method="post">
        <h2>REGISTER</h2>
        <label asp-for="FirstName" > </label>
        <input asp-for="FirstName" type="text" >
        <span asp-validation-for="FirstName"></span>

        <label asp-for="LastName" > </label>
        <input asp-for="LastName" type="text" >
        <span asp-validation-for="LastName"></span>

        <label asp-for="UserName" > </label>
        <input asp-for="UserName" type="text">
        <span asp-validation-for="UserName"></span>


        <label asp-for="Email" > </label>
        <input asp-for="Email" type="text" >
        <span asp-validation-for="Email"></span>

        <label asp-for="Password" > </label>
        <input asp-for="Password" type="text">
        <span asp-validation-for="Password"></span>

        <label asp-for="ConfirmPassword" > </label>
        <input asp-for="ConfirmPassword" type="password" >
        <span asp-validation-for="ConfirmPassword"></span>
        <div class="Text-danger" asp-validation-summary="ModelOnly">
        </div>
        <BR />

        <Button style="background-color:white;color:dimgray;border:dimgray 1px solid" asp-action="Login">
            Login
        </Button>
        <button type="submit">Submit</button>
    </form>

    <script src="script.js"></script>
</body>
</html>
<style>
    @@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Open Sans', sans-serif;
    }

    span {
        color: red;
    }

    body {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0 10px;
        min-height: 100vh;
    }

    form {
        padding: 25px;
        background: #fff;
        max-width: 500px;
        width: 100%;
        border-radius: 7px;
        box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
    }

    button {
        padding: 10px;
        background-color: red;
        border-radius: 8px;
        border: none;
        color: white;
        margin-top: 10px;
        font-size: 16px;
    }

    form h2 {
        font-size: 27px;
        text-align: center;
        margin: 0px 0 30px;
    }

    form .form-group {
        margin-bottom: 15px;
        position: relative;
    }

    form label {
        display: block;
        font-size: 15px;
        margin-bottom: 7px;
    }

    form input,
    form select {
        height: 45px;
        padding: 10px;
        width: 100%;
        font-size: 15px;
        outline: none;
        background: #fff;
        border-radius: 3px;
        border: 1px solid #bfbfbf;
    }

        form input:focus,
        form select:focus {
            border-color: #9a9a9a;
        }

        form input.error,
        form select.error {
            border-color: #f91919;
            background: #f9f0f1;
        }

    form small {
        font-size: 14px;
        margin-top: 5px;
        display: block;
        color: #f91919;
    }

    form .password i {
        position: absolute;
        right: 0px;
        height: 45px;
        top: 28px;
        font-size: 13px;
        line-height: 45px;
        width: 45px;
        cursor: pointer;
        color: #939393;
        text-align: center;
    }

    .submit-btn {
        margin-top: 30px;
    }

        .submit-btn input {
            color: white;
            border: none;
            height: auto;
            font-size: 16px;
            padding: 13px 0;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 500;
            text-align: center;
            background: #1BB295;
            transition: 0.2s ease;
        }

            .submit-btn input:hover {
                background: #179b81;
            }
</style>
<script>
    // Selecting form and input elements
    const form = document.querySelector("form");
    const passwordInput = document.getElementById("password");
    const passToggleBtn = document.getElementById("pass-toggle-btn");

    // Function to display error messages
    const showError = (field, errorText) => {
        field.classList.add("error");
        const errorElement = document.createElement("small");
        errorElement.classList.add("error-text");
        errorElement.innerText = errorText;
        field.closest(".form-group").appendChild(errorElement);
    }

    // Function to handle form submission
    const handleFormData = (e) => {
        e.preventDefault();

        // Retrieving input elements
        const fullnameInput = document.getElementById("fullname");
        const emailInput = document.getElementById("email");
        const dateInput = document.getElementById("date");
        const genderInput = document.getElementById("gender");

        // Getting trimmed values from input fields
        const fullname = fullnameInput.value.trim();
        const email = emailInput.value.trim();
        const password = passwordInput.value.trim();
        const date = dateInput.value;
        const gender = genderInput.value;

        // Regular expression pattern for email validation
        const emailPattern = /^[^ ]+@@[^ ]+\.[a-z]{2,3}$/;

        // Clearing previous error messages
        document.querySelectorAll(".form-group .error").forEach(field => field.classList.remove("error"));
        document.querySelectorAll(".error-text").forEach(errorText => errorText.remove());

        // Performing validation checks
        if (fullname === "") {
            showError(fullnameInput, "Enter your full name");
        }
        if (!emailPattern.test(email)) {
            showError(emailInput, "Enter a valid email address");
        }
        if (password === "") {
            showError(passwordInput, "Enter your password");
        }
        if (date === "") {
            showError(dateInput, "Select your date of birth");
        }
        if (gender === "") {
            showError(genderInput, "Select your gender");
        }

        // Checking for any remaining errors before form submission
        const errorInputs = document.querySelectorAll(".form-group .error");
        if (errorInputs.length > 0) return;

        // Submitting the form
        form.submit();
    }

    // Toggling password visibility
    passToggleBtn.addEventListener('click', () => {
        passToggleBtn.className = passwordInput.type === "password" ? "fa-solid fa-eye-slash" : "fa-solid fa-eye";
        passwordInput.type = passwordInput.type === "password" ? "text" : "password";
    });

    // Handling form submission event
    form.addEventListener("submit", handleFormData);
</script>